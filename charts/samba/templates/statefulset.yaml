apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: samba
  {{- if or .Values.samba.statefulsetAnnotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.samba.statefulsetAnnotations .Values.commonAnnotations) "context" .) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.samba.autoscaling.hpa.enabled }}
  replicas: {{ .Values.samba.replicaCount }}
  {{- end }}
  podManagementPolicy: {{ .Values.podManagementPolicy | quote }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.samba.podLabels .Values.commonLabels) "context" .) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: samba
  serviceName: {{ template "common.names.fullname" . }}
  {{- if .Values.samba.updateStrategy }}
  updateStrategy: {{- toYaml .Values.samba.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if .Values.samba.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.samba.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: samba
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 192.168.0.13
        searches:
          - gusek.info
        options:
          - name: ndots
            value: "5"
      {{- include "samba.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "samba.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.samba.automountServiceAccountToken }}
      {{- if .Values.samba.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.samba.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.samba.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.samba.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.samba.podAffinityPreset "component" "samba" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.samba.podAntiAffinityPreset "component" "samba" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.samba.nodeAffinityPreset.type "key" .Values.samba.nodeAffinityPreset.key "values" .Values.samba.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.samba.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.samba.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.samba.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.samba.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.samba.priorityClassName }}
      priorityClassName: {{ .Values.samba.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.samba.schedulerName }}
      schedulerName: {{ .Values.samba.schedulerName | quote }}
      {{- end }}
      {{- if .Values.samba.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.samba.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.samba.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.samba.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.samba.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.samba.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.samba.enabled }}
        - name: volume-permissions
          image: {{ include "samba.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - /bin/bash
            - -ec
            - |
              chown -R {{ .Values.samba.containerSecurityContext.runAsUser }}:{{ .Values.samba.podSecurityContext.fsGroup }} {{ .Values.persistence.samba.mountPath }}
          {{- if .Values.volumePermissions.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.volumePermissions.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- else if ne .Values.volumePermissions.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.volumePermissions.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}           
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
        {{- end }}
        {{- if .Values.samba.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.samba.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: samba

          image: {{ template "samba.image" . }}
          imagePullPolicy: {{ .Values.samba.image.pullPolicy }}
          {{- if .Values.samba.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.samba.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.samba.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.samba.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.samba.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.samba.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.samba.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.samba.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.samba.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.samba.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.samba.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.samba.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.samba.resources }}
          resources: {{- toYaml .Values.samba.resources | nindent 12 }}
          {{- else if ne .Values.samba.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.samba.resourcesPreset) | nindent 12 }}
          {{- end }}
          ports:
            - name: domain
              containerPort: {{ .Values.samba.containerPorts.domain }}
            - name: epm
              containerPort: {{ .Values.samba.containerPorts.epm }}
            - name: gc
              containerPort: {{ .Values.samba.containerPorts.gc }}
            - name: gcs
              containerPort: {{ .Values.samba.containerPorts.gcs }}
            - name: kdc-88
              containerPort: {{ .Values.samba.containerPorts.kdc_88 }}
            - name: kdc-464
              containerPort: {{ .Values.samba.containerPorts.kdc_464 }}
            - name: ldap
              containerPort: {{ .Values.samba.containerPorts.ldap }}
            - name: ldaps
              containerPort: {{ .Values.samba.containerPorts.ldaps }}
            - name: nbt-137
              containerPort: {{ .Values.samba.containerPorts.nbt_137 }}
            - name: nbt-138
              containerPort: {{ .Values.samba.containerPorts.nbt_138 }}
            - name: ntp
              containerPort: {{ .Values.samba.containerPorts.ntp }}
            - name: rdns
              containerPort: {{ .Values.samba.containerPorts.rdns }}
            - name: smb-139
              containerPort: {{ .Values.samba.containerPorts.smb_139 }}
            - name: smb-tcp
              containerPort: {{ .Values.samba.containerPorts.smb_tcp }}
            - name: smb-49153
              containerPort: {{ .Values.samba.containerPorts.smb_49153 }}
            {{- if .Values.samba.extraContainerPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.samba.extraContainerPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.samba.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.samba.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.samba.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.samba.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.samba.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.samba.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.samba.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.samba.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.samba.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.samba.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.samba.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.samba.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.samba.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.samba.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            # - name: certificate
            #   mountPath: /etc/samba/tls/cert.pem
            #   subPath: cert.pem
            # - name: certificate
            #   mountPath: /etc/samba/tls/fullchain.pem
            #   subPath: fullchain.pem
            # - name: certificate
            #   mountPath: /etc/samba/tls/privkey.pem
            #   subPath: privkey.pem
            - name: named-conf
              mountPath: /etc/bind/named.conf
              subPath: named.conf
            - name: named-conf
              mountPath: /etc/bind/named-acls.conf
              subPath: named-acls.conf
            - name: named-conf
              mountPath: /etc/bind/named.conf.options
              subPath: named.conf.options
            - name: named-conf
              mountPath: /etc/bind/named.conf.local
              subPath: named.conf.local
            - name: named-conf
              mountPath: /etc/bind/named.conf.zones
              subPath: named.conf.zones
            - name: named-conf
              mountPath: /etc/bind/db.local
              subPath: db.local
            - name: named-conf
              mountPath: /etc/bind/db.127
              subPath: db.127
            - name: named-conf
              mountPath: /etc/bind/db.0
              subPath: db.0
            - name: named-conf
              mountPath: /etc/bind/db.255
              subPath: db.255
            - name: named-data
              mountPath: /var/bind
            - name: named-conf
              mountPath: /var/bind/db.apps.gusek.info
              subPath: db.apps.gusek.info
            - name: named-key
              mountPath: /etc/bind/named-keys.conf
              subPath: named-keys.conf
            - name: samba-conf
              mountPath: /etc/samba/smb.conf
              subPath: smb.conf
            - name: samba-conf
              mountPath: /etc/krb5.conf
              subPath: krb5.conf
            - name: samba-data
              mountPath: /var/lib/samba
            - name: samba-cache
              mountPath: /var/cache/samba
            - name: supervisor-conf
              mountPath: /etc/supervisord.conf
              subPath: supervisord.conf
            - name: var-run-empty-dir
              mountPath: /var/run
          {{- if .Values.samba.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.samba.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}        
        {{- if .Values.samba.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.samba.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: init
          configMap:
            name: init
            defaultMode: 0500
        - name: named-conf
          configMap:
            name: named
        - name: named-key
          secret:
            secretName: named-key-secret
        {{- if .Values.persistence.named.enabled }}
        - name: named-data
          persistentVolumeClaim:
            claimName: named-data
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: samba-conf
          configMap:
            name: samba
        {{- if .Values.persistence.samba.enabled }}
        - name: samba-data
          hostPath:
            path: /data/samba
            type: Directory
        - name: samba-cache
          persistentVolumeClaim:
            claimName: samba-cache
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: supervisor-conf
          configMap:
            name: supervisor
        - name: var-run-empty-dir
          emptyDir: {}
        - name: certificate
          secret:
            secretName: wildcard
            defaultMode: 384
            items:
              - key: cert.pem
                path: cert.pem
                mode: 0600
              - key: fullchain.pem
                path: fullchain.pem
                mode: 0600
              - key: privkey.pem
                path: privkey.pem
                mode: 0600
        {{- if .Values.samba.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.samba.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
  volumeClaimTemplates:
  {{- if .Values.persistence.named.enabled }}
    - metadata:
        name: named-data
        {{- if or .Values.persistence.named.annotations .Values.commonAnnotations }}
        {{- $claimAnnotations := include "common.tplvalues.merge" (dict "values" .Values.persistence.named.annotations .Values.commonAnnotations "context" .) | fromYaml }}
        annotations: {{- include "common.tplvalues.render" ( dict "value" $claimAnnotations "context" $ ) | nindent 10 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        labels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.named.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.named.size | quote }}
        {{- if .Values.persistence.named.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.named.selector "context" $) | nindent 10 }}
        {{- end }}
        {{- include "common.storage.class" (dict "persistence" .Values.persistence.named "global" .Values.global) | nindent 8 }}
  {{- end }}
  {{- if .Values.persistence.samba.enabled }}
    - metadata:
        name: samba-cache
        {{- if or .Values.persistence.samba.annotations .Values.commonAnnotations }}
        {{- $claimAnnotations := include "common.tplvalues.merge" (dict "values" .Values.persistence.samba.annotations .Values.commonAnnotations "context" .) | fromYaml }}
        annotations: {{- include "common.tplvalues.render" ( dict "value" $claimAnnotations "context" $ ) | nindent 10 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        labels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.samba.cache.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.samba.cache.size | quote }}
        {{- if .Values.persistence.samba.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.samba.selector "context" $) | nindent 10 }}
        {{- end }}
        {{- include "common.storage.class" (dict "persistence" .Values.persistence.samba "global" .Values.global) | nindent 8 }}        
  {{- end }}
